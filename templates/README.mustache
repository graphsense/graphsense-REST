# OpenAPI generated server

## Overview
This server was generated by the [OpenAPI Generator](https://openapi-generator.tech) project. By using the
[OpenAPI-Spec](https://openapis.org) from a remote server, you can easily generate a server stub.  This
is an example of building a OpenAPI-enabled Flask server.

This example uses the [Connexion](https://github.com/zalando/connexion) library on top of Flask.

## Requirements
{{#supportPython2}}
Python 2.7+
{{/supportPython2}}
{{^supportPython2}}
Python 3.5.2+
{{/supportPython2}}

## Setup

Create an instance folder and copy the configuration file template

    mkdir -p instance
    cp conf/config.yaml.tmp instance/config.yaml

Open `instance/config.yaml` and configure the database connection.

## Usage

## Running with Docker

To run the server on a Docker container, please execute the following from the root directory:

```bash
# building the image
docker build -t {{packageName}} .

# starting up a container
docker run -p 9000:9000 {{packageName}}
```

## Development

### Generate server stub

```sh
BRANCH=master
URL=https://github.com/graphsense/graphsense-openapi/blob/$BRANCH/graphsense.yaml
docker run --rm \
  -v "${PWD}:/build" \
  -v "${PWD}/templates:/templates" \
  openapitools/openapi-generator-cli \
  generate -i "$URL" -g python-flask -o /build -t /templates
```

The service implementation (`gsrest/service`) should use the generated models located in `openapi_server/models`.

Source code generation is based on templates. See the `templates` directory for currenctly used templates. If you need more templates, retrieve them from the generator like this:

    docker run --rm -v "/tmp/templates:/templates" openapitools/openapi-generator-cli author template -g python-flask -o /templates

Templates are written to `/tmp/templates`. Copy the needed ones to this project's `templates` directory.

Service tests are located in `gsrest/test`. These are called from generated controller tests located in `openapi_server/test/`.

To launch the integration tests, use tox:
```
sudo pip install tox
tox
```
