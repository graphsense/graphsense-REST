# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class Values(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, eur=None, usd=None, value=None):  # noqa: E501
        """Values - a model defined in OpenAPI

        :param eur: The eur of this Values.  # noqa: E501
        :type eur: float
        :param usd: The usd of this Values.  # noqa: E501
        :type usd: float
        :param value: The value of this Values.  # noqa: E501
        :type value: int
        """
        self.openapi_types = {
            'eur': float,
            'usd': float,
            'value': int
        }

        self.attribute_map = {
            'eur': 'eur',
            'usd': 'usd',
            'value': 'value'
        }

        self._eur = eur
        self._usd = usd
        self._value = value

    @classmethod
    def from_dict(cls, dikt) -> 'Values':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The values of this Values.  # noqa: E501
        :rtype: Values
        """
        return util.deserialize_model(dikt, cls)

    def to_dict(self, prefix=""):
        """Returns the model as a dict:

        :return: The Values as a dict
        :rtype: dict
        """
        return { 'eur': self._eur,
            'usd': self._usd,
            'value': self._value }


    @property
    def eur(self):
        """Gets the eur of this Values.


        :return: The eur of this Values.
        :rtype: float
        """
        return self._eur

    @eur.setter
    def eur(self, eur):
        """Sets the eur of this Values.


        :param eur: The eur of this Values.
        :type eur: float
        """

        self._eur = eur

    @property
    def usd(self):
        """Gets the usd of this Values.


        :return: The usd of this Values.
        :rtype: float
        """
        return self._usd

    @usd.setter
    def usd(self, usd):
        """Sets the usd of this Values.


        :param usd: The usd of this Values.
        :type usd: float
        """

        self._usd = usd

    @property
    def value(self):
        """Gets the value of this Values.


        :return: The value of this Values.
        :rtype: int
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this Values.


        :param value: The value of this Values.
        :type value: int
        """

        self._value = value
