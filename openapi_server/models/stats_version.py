# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class StatsVersion(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, nr=None, hash=None, timestamp=None, file=None):  # noqa: E501
        """StatsVersion - a model defined in OpenAPI

        :param nr: The nr of this StatsVersion.  # noqa: E501
        :type nr: str
        :param hash: The hash of this StatsVersion.  # noqa: E501
        :type hash: str
        :param timestamp: The timestamp of this StatsVersion.  # noqa: E501
        :type timestamp: str
        :param file: The file of this StatsVersion.  # noqa: E501
        :type file: str
        """
        self.openapi_types = {
            'nr': str,
            'hash': str,
            'timestamp': str,
            'file': str
        }

        self.attribute_map = {
            'nr': 'nr',
            'hash': 'hash',
            'timestamp': 'timestamp',
            'file': 'file'
        }

        self._nr = nr
        self._hash = hash
        self._timestamp = timestamp
        self._file = file

    @classmethod
    def from_dict(cls, dikt) -> 'StatsVersion':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The stats_version of this StatsVersion.  # noqa: E501
        :rtype: StatsVersion
        """
        return util.deserialize_model(dikt, cls)

    def to_dict(self, prefix=""):
        """Returns the model as a dict:

        :return: The StatsVersion as a dict
        :rtype: dict
        """
        return { 'nr': self._nr,
            'hash': self._hash,
            'timestamp': self._timestamp,
            'file': self._file }


    @property
    def nr(self):
        """Gets the nr of this StatsVersion.


        :return: The nr of this StatsVersion.
        :rtype: str
        """
        return self._nr

    @nr.setter
    def nr(self, nr):
        """Sets the nr of this StatsVersion.


        :param nr: The nr of this StatsVersion.
        :type nr: str
        """

        self._nr = nr

    @property
    def hash(self):
        """Gets the hash of this StatsVersion.


        :return: The hash of this StatsVersion.
        :rtype: str
        """
        return self._hash

    @hash.setter
    def hash(self, hash):
        """Sets the hash of this StatsVersion.


        :param hash: The hash of this StatsVersion.
        :type hash: str
        """

        self._hash = hash

    @property
    def timestamp(self):
        """Gets the timestamp of this StatsVersion.


        :return: The timestamp of this StatsVersion.
        :rtype: str
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this StatsVersion.


        :param timestamp: The timestamp of this StatsVersion.
        :type timestamp: str
        """

        self._timestamp = timestamp

    @property
    def file(self):
        """Gets the file of this StatsVersion.


        :return: The file of this StatsVersion.
        :rtype: str
        """
        return self._file

    @file.setter
    def file(self, file):
        """Sets the file of this StatsVersion.


        :param file: The file of this StatsVersion.
        :type file: str
        """

        self._file = file
