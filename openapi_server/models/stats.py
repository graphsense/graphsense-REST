# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.currency_stats import CurrencyStats
from openapi_server import util

from openapi_server.models.currency_stats import CurrencyStats  # noqa: E501

class Stats(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, currencies=None):  # noqa: E501
        """Stats - a model defined in OpenAPI

        :param currencies: The currencies of this Stats.  # noqa: E501
        :type currencies: List[CurrencyStats]
        """
        self.openapi_types = {
            'currencies': List[CurrencyStats]
        }

        self.attribute_map = {
            'currencies': 'currencies'
        }

        self._currencies = currencies

    @classmethod
    def from_dict(cls, dikt) -> 'Stats':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The stats of this Stats.  # noqa: E501
        :rtype: Stats
        """
        return util.deserialize_model(dikt, cls)

    def to_dict(self, prefix=""):
        """Returns the model as a dict:

        :return: The Stats as a dict
        :rtype: dict
        """
        return { 'currencies': self._currencies }


    @property
    def currencies(self):
        """Gets the currencies of this Stats.


        :return: The currencies of this Stats.
        :rtype: List[CurrencyStats]
        """
        return self._currencies

    @currencies.setter
    def currencies(self, currencies):
        """Sets the currencies of this Stats.


        :param currencies: The currencies of this Stats.
        :type currencies: List[CurrencyStats]
        """

        self._currencies = currencies
