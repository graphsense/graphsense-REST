# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model_ import Model
from openapi_server import util


class StatsTool(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, responsible_for: List[str]=None, titanium_replayable: bool=None, version: str=None, visible_name: str=None):
        """StatsTool - a model defined in OpenAPI

        :param id: The id of this StatsTool.
        :param responsible_for: The responsible_for of this StatsTool.
        :param titanium_replayable: The titanium_replayable of this StatsTool.
        :param version: The version of this StatsTool.
        :param visible_name: The visible_name of this StatsTool.
        """
        self.openapi_types = {
            'id': str,
            'responsible_for': List[str],
            'titanium_replayable': bool,
            'version': str,
            'visible_name': str
        }

        self.attribute_map = {
            'id': 'id',
            'responsible_for': 'responsible_for',
            'titanium_replayable': 'titanium_replayable',
            'version': 'version',
            'visible_name': 'visible_name'
        }

        self._id = id
        self._responsible_for = responsible_for
        self._titanium_replayable = titanium_replayable
        self._version = version
        self._visible_name = visible_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StatsTool':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The stats_tool of this StatsTool.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this StatsTool.


        :return: The id of this StatsTool.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this StatsTool.


        :param id: The id of this StatsTool.
        :type id: str
        """

        self._id = id

    @property
    def responsible_for(self):
        """Gets the responsible_for of this StatsTool.


        :return: The responsible_for of this StatsTool.
        :rtype: List[str]
        """
        return self._responsible_for

    @responsible_for.setter
    def responsible_for(self, responsible_for):
        """Sets the responsible_for of this StatsTool.


        :param responsible_for: The responsible_for of this StatsTool.
        :type responsible_for: List[str]
        """

        self._responsible_for = responsible_for

    @property
    def titanium_replayable(self):
        """Gets the titanium_replayable of this StatsTool.


        :return: The titanium_replayable of this StatsTool.
        :rtype: bool
        """
        return self._titanium_replayable

    @titanium_replayable.setter
    def titanium_replayable(self, titanium_replayable):
        """Sets the titanium_replayable of this StatsTool.


        :param titanium_replayable: The titanium_replayable of this StatsTool.
        :type titanium_replayable: bool
        """

        self._titanium_replayable = titanium_replayable

    @property
    def version(self):
        """Gets the version of this StatsTool.


        :return: The version of this StatsTool.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this StatsTool.


        :param version: The version of this StatsTool.
        :type version: str
        """

        self._version = version

    @property
    def visible_name(self):
        """Gets the visible_name of this StatsTool.


        :return: The visible_name of this StatsTool.
        :rtype: str
        """
        return self._visible_name

    @visible_name.setter
    def visible_name(self, visible_name):
        """Sets the visible_name of this StatsTool.


        :param visible_name: The visible_name of this StatsTool.
        :type visible_name: str
        """

        self._visible_name = visible_name
