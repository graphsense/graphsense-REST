# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model_ import Model
from openapi_server import util


class Rate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code: str=None, value: float=None):
        """Rate - a model defined in OpenAPI

        :param code: The code of this Rate.
        :param value: The value of this Rate.
        """
        self.openapi_types = {
            'code': str,
            'value': float
        }

        self.attribute_map = {
            'code': 'code',
            'value': 'value'
        }

        self._code = code
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Rate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The rate of this Rate.
        """
        return util.deserialize_model(dikt, cls)

    def to_dict(self, prefix=""):
        """Returns the model as a dict:

        :return: The Rate as a dict
        :rtype: dict
        """
        return { 'code': self._code,
            'value': self._value }


    @property
    def code(self):
        """Gets the code of this Rate.

        iso currency code

        :return: The code of this Rate.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this Rate.

        iso currency code

        :param code: The code of this Rate.
        :type code: str
        """

        self._code = code

    @property
    def value(self):
        """Gets the value of this Rate.

        exchange rate

        :return: The value of this Rate.
        :rtype: float
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this Rate.

        exchange rate

        :param value: The value of this Rate.
        :type value: float
        """

        self._value = value
