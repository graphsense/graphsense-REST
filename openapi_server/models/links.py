# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.link import Link
from openapi_server import util

from openapi_server.models.link import Link  # noqa: E501

class Links(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, links=None, next_page=None):  # noqa: E501
        """Links - a model defined in OpenAPI

        :param links: The links of this Links.  # noqa: E501
        :type links: List[Link]
        :param next_page: The next_page of this Links.  # noqa: E501
        :type next_page: str
        """
        self.openapi_types = {
            'links': List[Link],
            'next_page': str
        }

        self.attribute_map = {
            'links': 'links',
            'next_page': 'next_page'
        }

        self._links = links
        self._next_page = next_page

    @classmethod
    def from_dict(cls, dikt) -> 'Links':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The links of this Links.  # noqa: E501
        :rtype: Links
        """
        return util.deserialize_model(dikt, cls)

    def to_dict(self, prefix=""):
        """Returns the model as a dict:

        :return: The Links as a dict
        :rtype: dict
        """
        return { 'links': self._links,
            'next_page': self._next_page }


    @property
    def links(self):
        """Gets the links of this Links.


        :return: The links of this Links.
        :rtype: List[Link]
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this Links.


        :param links: The links of this Links.
        :type links: List[Link]
        """

        self._links = links

    @property
    def next_page(self):
        """Gets the next_page of this Links.


        :return: The next_page of this Links.
        :rtype: str
        """
        return self._next_page

    @next_page.setter
    def next_page(self, next_page):
        """Sets the next_page of this Links.


        :param next_page: The next_page of this Links.
        :type next_page: str
        """

        self._next_page = next_page
