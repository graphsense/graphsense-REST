# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model_ import Model
from openapi_server.models.link import Link
from openapi_server import util


class Links(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, next_page: str=None, links: List[Link]=None):
        """Links - a model defined in OpenAPI

        :param next_page: The next_page of this Links.
        :param links: The links of this Links.
        """
        self.openapi_types = {
            'next_page': str,
            'links': List[Link]
        }

        self.attribute_map = {
            'next_page': 'next_page',
            'links': 'links'
        }

        self._next_page = next_page
        self._links = links

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Links':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The links of this Links.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def next_page(self):
        """Gets the next_page of this Links.


        :return: The next_page of this Links.
        :rtype: str
        """
        return self._next_page

    @next_page.setter
    def next_page(self, next_page):
        """Sets the next_page of this Links.


        :param next_page: The next_page of this Links.
        :type next_page: str
        """

        self._next_page = next_page

    @property
    def links(self):
        """Gets the links of this Links.


        :return: The links of this Links.
        :rtype: List[Link]
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this Links.


        :param links: The links of this Links.
        :type links: List[Link]
        """

        self._links = links
