# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.address_tx import AddressTx
from openapi_server import util

from openapi_server.models.address_tx import AddressTx  # noqa: E501

class AddressTxs(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address_txs=None, next_page=None):  # noqa: E501
        """AddressTxs - a model defined in OpenAPI

        :param address_txs: The address_txs of this AddressTxs.  # noqa: E501
        :type address_txs: List[AddressTx]
        :param next_page: The next_page of this AddressTxs.  # noqa: E501
        :type next_page: str
        """
        self.openapi_types = {
            'address_txs': List[AddressTx],
            'next_page': str
        }

        self.attribute_map = {
            'address_txs': 'address_txs',
            'next_page': 'next_page'
        }

        self._address_txs = address_txs
        self._next_page = next_page

    @classmethod
    def from_dict(cls, dikt) -> 'AddressTxs':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The address_txs of this AddressTxs.  # noqa: E501
        :rtype: AddressTxs
        """
        return util.deserialize_model(dikt, cls)

    def to_dict(self, prefix=""):
        """Returns the model as a dict:

        :return: The AddressTxs as a dict
        :rtype: dict
        """
        return { 'address_txs': self._address_txs,
            'next_page': self._next_page }


    @property
    def address_txs(self):
        """Gets the address_txs of this AddressTxs.


        :return: The address_txs of this AddressTxs.
        :rtype: List[AddressTx]
        """
        return self._address_txs

    @address_txs.setter
    def address_txs(self, address_txs):
        """Sets the address_txs of this AddressTxs.


        :param address_txs: The address_txs of this AddressTxs.
        :type address_txs: List[AddressTx]
        """

        self._address_txs = address_txs

    @property
    def next_page(self):
        """Gets the next_page of this AddressTxs.


        :return: The next_page of this AddressTxs.
        :rtype: str
        """
        return self._next_page

    @next_page.setter
    def next_page(self, next_page):
        """Sets the next_page of this AddressTxs.


        :param next_page: The next_page of this AddressTxs.
        :type next_page: str
        """

        self._next_page = next_page
